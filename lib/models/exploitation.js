/* eslint-disable arrow-body-style */
import {memoize} from 'lodash-es'

import * as storage from './internal/in-memory.js'

export async function getBeneficiaireExploitations(idBeneficiaire) {
  return storage.exploitations
    .filter(e => e.id_beneficiaire === idBeneficiaire)
}

export const getExploitationsFromPointId = memoize(idPoint => {
  return (storage.exploitationsIndexes.point[idPoint] || [])
    .map(originalExploitation => {
      const exploitation = {...originalExploitation}

      // Importation des règles dans exploitation
      exploitation.regles = storage.exploitationsRegles
        .filter(r => r.id_exploitation === exploitation.id_exploitation)
        .map(r => storage.indexedRegles[r.id_regle])

      // Importation des documents dans les règles
      for (const r of exploitation.regles) {
        r.document = storage.indexedDocuments[r.id_document]
      }

      exploitation.documents = storage.exploitationsDocuments
        .filter(ed => ed.id_exploitation === exploitation.id_exploitation)
        .map(ed => storage.indexedDocuments[ed.id_document])

      // Importation des modalités dans exploitation
      exploitation.modalites = storage.exploitationModalites
        .filter(e => e.id_exploitation === exploitation.id_exploitation) || []
        .map(m => (
          storage.modalitesSuivis.find(ms => ms.id_modalite === m.id_modalite)
        ))

      // Importation des séries dans exploitation
      exploitation.series = storage.exploitationsSerie
        .filter(e => e.id_exploitation === exploitation.id_exploitation)
        .map(s => storage.indexedSeriesDonnees[s.id_serie])

      // Importation des résultats de suivi dans les séries
      for (const s of exploitation.series) {
        s.resultats = storage.resultatsSuivi[s.id_serie] || []
      }

      return exploitation
    })
})

export async function getExploitation(idExploitation) {
  return storage.indexedExploitations[idExploitation]
}

export async function getDocumentFromExploitationId(idExploitation) {
  return storage.exploitationsDocuments
    .filter(ed => ed.id_exploitation === idExploitation)
    .map(ed => storage.indexedDocuments[ed.id_document])
}

export async function getReglesFromExploitationId(idExploitation) {
  return storage.exploitationsRegles
    .filter(r => r.id_exploitation === idExploitation)
    .map(r => storage.indexedRegles[r.id_regle])
}

export async function getModalitesFromExploitationId(idExploitation) {
  return storage.exploitationModalites
    .filter(m => m.id_exploitation === idExploitation)
    .map(m => storage.indexedModalitesSuivis[m.id_modalite])
}

export async function getRegle(idRegle) {
  return storage.indexedRegles[idRegle]
}

export async function getDocument(idDocument) {
  return storage.indexedDocuments[idDocument]
}

export async function getDocumentFromRegleId(idRegle) {
  const regle = storage.indexedRegles[idRegle]
  return storage.indexedDocuments[regle.id_document]
}
